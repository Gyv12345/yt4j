spring:
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  boot:
    admin:
      client:
        url: http://yt4j-admin:8891/admin
mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
yt4j:
  swagger:
    enabled: true
  sa:
    ignoredUrl:
      - /user/login
      - /auth/login
      - /swagger-ui.html\
      - /swagger-resources/**
      - /swagger/**
      - /**/v3/api-docs
      - /**/*.js
      - /**/*.css
      - /**/*.png
      - /**/*.ico
      - /webjars/springfox-swagger-ui/**
      - /actuator/**
      - /doc.html
      - /v3/api-docs
jasypt:
  encryptor:
    password: yt4j
# 暴露监控端点
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: ALWAYS
    logfile:
      external-file: ./logs/${spring.application.name}/console.log
# Sa-Token配置
sa-token:
  # token名称 (同时也是cookie名称)
  token-name: Authorization
  # token有效期 设为一天 (必定过期) 单位: 秒
  timeout: 86400
  # token临时有效期 (指定时间无操作就过期) 单位: 秒
  activity-timeout: 1800
  # 开启内网服务调用鉴权
  check-same-token: true
  # Id-Token的有效期 (单位: 秒)
  id-token-timeout: 600
  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
  is-share: false
  # 是否尝试从header里读取token
  is-read-head: true
  # 是否尝试从cookie里读取token
  is-read-cookie: false
  # token前缀
  token-prefix: "Bearer"
  # 是否输出操作日志
  is-log: true
--- #
spring:
  data:
    redis:
      host: yt4j-redis
      password: 123456
# plumelog 集中式日志 链路追踪
plumelog:
  appName: ${spring.application.name}
  redisHost: ${spring.data.redis.host}
  redisAuth: ${spring.data.redis.password}
  redisDb: 0
--- # 二方库信息
yt4j:
  swagger:
    enabled: true
    info:
      title: @artifactId@文档
      version: @project.version@
      description: '使用Knife4j返回Open-Api文档'
