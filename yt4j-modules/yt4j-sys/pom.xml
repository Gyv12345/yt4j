<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>yt4j-modules</artifactId>
        <groupId>cn.yt4j</groupId>
        <version>1.0.1</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>yt4j-sys</artifactId>
    <packaging>jar</packaging>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.ulisesbocchio</groupId>
            <artifactId>jasypt-spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        <dependency>
            <groupId>cn.yt4j</groupId>
            <artifactId>yt4j-core</artifactId>
        </dependency>
        <dependency>
            <groupId>cn.yt4j</groupId>
            <artifactId>yt4j-security</artifactId>
        </dependency>
        <dependency>
            <groupId>cn.yt4j</groupId>
            <artifactId>yt4j-data</artifactId>
        </dependency>
        <dependency>
            <groupId>cn.yt4j</groupId>
            <artifactId>yt4j-web</artifactId>
        </dependency>
        <dependency>
            <groupId>cn.yt4j</groupId>
            <artifactId>ysg-swagger</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <fork>true</fork>
                </configuration>
            </plugin>
<!--            <plugin>-->
<!--                <groupId>com.github.shalousun</groupId>-->
<!--                <artifactId>smart-doc-maven-plugin</artifactId>-->
<!--                <version>1.1.8</version>-->
<!--                <configuration>-->
<!--                    &lt;!&ndash;指定生成文档的使用的配置文件,配置文件放在自己的项目中&ndash;&gt;-->
<!--                    <configFile>./src/main/resources/smart-doc.json</configFile>-->
<!--                    &lt;!&ndash;指定项目名称&ndash;&gt;-->
<!--                    <projectName>测试</projectName>-->
<!--                    &lt;!&ndash;smart-doc实现自动分析依赖树加载第三方依赖的源码，如果一些框架依赖库加载不到导致报错，这时请使用excludes排除掉&ndash;&gt;-->
<!--                    <excludes>-->
<!--                        &lt;!&ndash;格式为：groupId:artifactId;参考如下&ndash;&gt;-->
<!--                        <exclude>com.alibaba:fastjson</exclude>-->
<!--                    </excludes>-->
<!--                    &lt;!&ndash;自1.0.8版本开始，插件提供includes支持&ndash;&gt;-->
<!--                    &lt;!&ndash;smart-doc能自动分析依赖树加载所有依赖源码，原则上会影响文档构建效率，因此你可以使用includes来让插件加载你配置的组件&ndash;&gt;-->
<!--                    <includes>-->
<!--                        &lt;!&ndash;格式为：groupId:artifactId;参考如下&ndash;&gt;-->
<!--                        <include>com.alibaba:fastjson</include>-->
<!--                    </includes>-->
<!--                </configuration>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        &lt;!&ndash;如果不需要在执行编译时启动smart-doc，则将phase注释掉&ndash;&gt;-->
<!--                        <phase>compile</phase>-->
<!--                        <goals>-->
<!--                            <goal>html</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
        </plugins>
    </build>


</project>
